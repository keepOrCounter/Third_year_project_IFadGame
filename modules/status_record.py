class Player_status():
    def __init__(self, currentLocation:list[int,int] = [0,0], items:list[str] = []) -> None:
        """ `__currentLocation:` player coordinate [x,y]\n
            `items:` items in bag
        """
        
        self.__currentLocation = currentLocation
        self.items = items
    
    def coordinate_get(self) -> tuple[int]:
        
        return (self.__currentLocation[0], self.__currentLocation[1])
    
    def XCoord_setter(self, x:int) -> None:
        self.__currentLocation[0] = x
        
    def YCoord_setter(self, y:int) -> None:
        self.__currentLocation[1] = y
        
class Location():
    def __init__(self, location_name:str, x:int, y:int, objects:list = [], scene: list = [], \
        description: str = "") -> None:
        """`location_name:` name of current terrain\n
            `objects:` items at current place\n
            `scene:` stage set/environment description of current place\n
            `description:` description generated by GPT, only for visited places\n
            `x\y: ` locations' coordinate
        """
        self.location_name = location_name
        self.objects = objects
        self.scene = scene
        self.description = description
        self.x = x
        self.y = y
        
class Map_information():
    def __init__(self, current_area_type: int = 0, currentMap = []) -> None:
        """`current_area_type:` used for generate map, 0 for sea area, 1 for land \
            area, affect the probility of different terrain\n
            `visitedPlace:` 
        """
        self.visitedPlace = {} # {(x, y): "Location_object"}
        self.current_area_type = current_area_type
        self.currentMap = currentMap